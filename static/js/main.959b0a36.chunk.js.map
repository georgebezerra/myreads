{"version":3,"sources":["BooksAPI.js","Search.js","BookShelf.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","error","SearchBooks","state","vazio","result","updateQuery","_this","setState","trim","length","BooksAPI","console","log","withShelf","props","booksCR","filter","resultBooks","map","resultBook","find","catch","_this2","this","_this$state","onChangeShelf","allBooks","react_default","a","createElement","className","type","placeholder","value","onChange","event","target","Link","to","key","style","width","height","backgroundImage","imageLinks","thumbnail","disable","title","authors","Component","BooksApp","_this$props","bookEstantes","booksWR","booksRead","disabled","React","bookUpdateShelf","handleChangeShelf","bookToUpdate","_this3","Route","exact","path","render","BookShelf_BooksApp","Search_SearchBooks","ReactDOM","BrowserRouter","basename","process","App_BooksApp","document","getElementById"],"mappings":"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","file":"static/js/main.959b0a36.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => {\n      if(data.books.error){\n        return []\n      }\n      return data.books\n    })\n","import React, { Component } from 'react'\nimport                           './App.css'\nimport PropTypes            from 'prop-types'\nimport { Link }             from 'react-router-dom'\nimport * as BooksAPI        from './BooksAPI'\n//import escapeRegExp         from 'escape-string-regexp'\n//import sortBy               from 'sort-by'\n\nexport default class SearchBooks extends Component {\n  static propTypes = {\n    books         : PropTypes.array.isRequired,\n    onChangeShelf : PropTypes.func.isRequired,\n  }\n    state = {\n      query:'',\n      vazio: [],\n      result: [],\n    }\n\n//O QUE FALTA PARA CONCLUIR O PROJETO - É FAZER AS ESTANTES ESTAREM SELECIONADAS CONFORME O CORRESPONDENTE.\n    updateQuery = (query) => {\n      this.setState({ query })\n        if(query.trim().length){\n          BooksAPI.search(query.trim()).then((result)=> {                               console.log(\"Pesquisa : \", result)\n\n           const withShelf = this.props.books\n           const booksCR   = withShelf.filter(book => book.shelf === 'currentlyReading')\n           const booksWR   = withShelf.filter(book => book.shelf === 'wantToRead')\n           const booksRead = withShelf.filter(book => book.shelf === 'read')\n\n             const resultBooks = result.map(resultBook  => {                            console.log(\"withoutShelf : \", resultBook)\n               const book = withShelf.find(withShelf => withShelf.id === resultBook.id, console.log(\"withShelf : \", withShelf)) !== book\n                   ? booksCR\n                   : resultBook.shelf = 'none'\n\n                return resultBook\n              })\n           this.setState({ result : resultBooks })\n          }).catch(error => console.log(error));\n        }\n      }\n\n  render() {\n     const { query, result, vazio }   = this.state\n     const { onChangeShelf }   = this.props\n  // const { books }   = this.props\n\n     const allBooks = query === '' ? vazio : result\n     const noCover = 'url(\"\")'\n\n  //   const showingBooks = allBooks.filter()\n\n    return (\n      <div className=\"list-books\">\n        <div className=\"list-books-title\">\n            <h1>Search of Books</h1>\n        </div>\n          <div className=\"list-books-content\">\n             <div className='search-books-bar'>\n                <input className   = 'search-books-bar'\n                       type        = \"text\"\n                       placeholder = \"Search by title\"\n                       value       = {query}\n                       onChange    = {(event) => this.updateQuery(event.target.value)}\n                 />\n               </div>\n           </div>\n      <div><Link to='/'>Home</Link></div>\n      <ol className=\"books-grid\">\n        {allBooks.map((book) => (\n            <li key={book.id}>\n              <div className=\"book\">\n                <div className=\"book-top\">\n                  <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${book.imageLinks && book.imageLinks.thumbnail ? book.imageLinks.thumbnail : noCover})`}}></div>\n                  <div className=\"book-shelf-changer\">\n                    <select value={book.shelf} onChange={(event) => onChangeShelf(event, book)}>\n                      <option value=\"move\" disable=\"true\">Move to...</option>\n                      <option value=\"currentlyReading\">Currently Reading</option>\n                      <option value=\"wantToRead\">Want to Read</option>\n                      <option value=\"read\">Read</option>\n                      <option value=\"none\">None</option>\n                    </select>\n                  </div>\n                </div>\n                <div className=\"book-title\">{book.title}</div>\n                <div className=\"book-authors\">{book.authors}</div>\n              </div>\n            </li>\n          ))}\n      </ol>\n    </div>\n    )\n  }\n}\n","import React     from 'react'\nimport                './App.css'\nimport PropTypes from 'prop-types'\nimport { Link }  from 'react-router-dom'\n\nexport default class BooksApp extends React.Component {\n  static propTypes = {\n    books         : PropTypes.array.isRequired,\n    bookEstantes  : PropTypes.func.isRequired,\n    onChangeShelf : PropTypes.func.isRequired,\n  }\n\n  render() {\n     const { books, bookEstantes, onChangeShelf} = this.props\n\n     const  booksCR   = books.filter(book => book.shelf === 'currentlyReading')\n     const  booksWR   = books.filter(book => book.shelf === 'wantToRead')\n     const  booksRead = books.filter(book => book.shelf === 'read')\n\n    return (\n        <div className=\"list-books\">\n            <div className=\"list-books-title\">\n              <h1>MyReads</h1>\n            </div>\n            <div className=\"list-books-content\">\n              <div>\n                <div className=\"bookshelf\">\n                  <h2 className=\"bookshelf-title\">Currently Reading</h2>\n                  <div className=\"bookshelf-books\">\n                    <ol className=\"books-grid\">\n                      {booksCR.map((book) => (\n                          <li key={book.id}>\n                            <div className=\"book\">\n                              <div className=\"book-top\">\n                                <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${book.imageLinks.thumbnail})`}}></div>\n                                <div className=\"book-shelf-changer\">\n                                  <select value={book.shelf} onChange={(event) => onChangeShelf(event, book)}>\n                                    <option value=\"move\" disabled>Move to...</option>\n                                    <option value=\"currentlyReading\">Currently Reading</option>\n                                    <option value=\"wantToRead\">Want to Read</option>\n                                    <option value=\"read\">Read</option>\n                                    <option value=\"none\">None</option>\n                                  </select>\n                                </div>\n                              </div>\n                              <div className=\"book-title\">{book.title}</div>\n                              <div className=\"book-authors\">{book.authors}</div>\n                            </div>\n                          </li>\n                        ))}\n                    </ol>\n                  </div>\n                </div>\n                <div className=\"bookshelf\">\n                  <h2 className=\"bookshelf-title\">Want to Read</h2>\n                  <div className=\"bookshelf-books\">\n                    <ol className=\"books-grid\">\n                      {booksWR.map((book) => (\n                              <li key={book.id}>\n                                <div className=\"book\">\n                                  <div className=\"book-top\">\n                                    <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${book.imageLinks.thumbnail})`}}></div>\n                                    <div className=\"book-shelf-changer\">\n                                      <select value={book.shelf} onChange={(event) => onChangeShelf(event, book)}>\n                                        <option value=\"move\" disabled>Move to...</option>\n                                        <option value=\"currentlyReading\">Currently Reading</option>\n                                        <option value=\"wantToRead\">Want to Read</option>\n                                        <option value=\"read\">Read</option>\n                                        <option value=\"none\">None</option>\n                                      </select>\n                                    </div>\n                                  </div>\n                                  <div className=\"book-title\">{book.title}</div>\n                                  <div className=\"book-authors\">{book.authors}</div>\n                                </div>\n                              </li>\n                            ))}\n                      </ol>\n                  </div>\n                </div>\n                <div className=\"bookshelf\">\n                  <h2 className=\"bookshelf-title\">Read</h2>\n                  <div className=\"bookshelf-books\">\n                    <ol className=\"books-grid\">\n                      {booksRead.map((book) => (\n                            <li key={book.id}>\n                              <div className=\"book\">\n                                <div className=\"book-top\">\n                                  <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${book.imageLinks.thumbnail})`}}></div>\n                                  <div className=\"book-shelf-changer\">\n                                    <select value={book.shelf} onChange={(event) => onChangeShelf(event, book)}>\n                                      <option value=\"move\" disabled>Move to...</option>\n                                      <option value=\"currentlyReading\">Currently Reading</option>\n                                      <option value=\"wantToRead\">Want to Read</option>\n                                      <option value=\"read\">Read</option>\n                                      <option value=\"none\">None</option>\n                                    </select>\n                                  </div>\n                                </div>\n                                <div className=\"book-title\">{book.title}</div>\n                                <div className=\"book-authors\">{book.authors}</div>\n                              </div>\n                            </li>\n                          ))}\n                    </ol>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"open-search\">\n              <Link to='/search'>\n                Search a book\n              </Link>\n            </div>\n      </div>\n    )\n  }\n}\n","import React         from 'react'\nimport { Route }     from 'react-router-dom'\nimport * as BooksAPI from './BooksAPI'\nimport                    './App.css'\nimport Search        from './Search.js'\nimport BookShelf     from './BookShelf'\n\nexport default class BooksApp extends React.Component {\n  state = {\n    books : [],\n  }\n\n  //Método para buscar livros da API com shelf definida\ncomponentDidMount() {\n  BooksAPI.getAll().then((books) => {  console.log('Livros: ', books)\n   this.setState(() => ({books}))\n     }).catch(error => console.log(error));\n}\n\n//Método para atualizar as estantes\nbookUpdateShelf = () => {\n    BooksAPI.getAll().then((books) =>{ console.log('EstandesAtualizadas', books)\n      this.setState({books})\n    }).catch(error => console.log(error));\n  }\n\n//Método para mudar de estantes\nhandleChangeShelf = (event, bookToUpdate) => {\n  const shelf = event.target.value\n  bookToUpdate.shelf = shelf\n    BooksAPI.update(bookToUpdate, shelf).then(() => {\n      this.bookUpdateShelf()\n    }).catch(error => console.log(error));\n}\n\n book = (books) => {\n  if (books.shelf === 'currentlyReading')  {                 console.log('Lendo atualmente : ')\n        return books.filter(book => book.shelf === 'currentlyReading')\n\n } else if (books.shelf === 'wantToRead') {                 console.log('Quero ler: ')\n        return  books.filter(book => book.shelf === 'currentlyReading')\n\n } else if (books.shelf === 'read') {                       console.log('Ler : ')\n        return books.filter(book => book.shelf === 'read')\n\n } else {\n        return books.shelf = 'none'\n }\n}\n\n  render() {\n    return (\n      <div>\n          <Route exact path='/' render={() => ( <BookShelf bookEstantes = {this.book} books = {this.state.books} onChangeShelf = {this.handleChangeShelf} />)} />\n          <Route path='/search' render={() => ( <Search    books = {this.state.books} onChangeShelf = {this.handleChangeShelf} /> )} />\n      </div>\n    )\n }\n}\n","import React            from 'react'\nimport ReactDOM         from 'react-dom'\nimport App              from './App'\nimport                       './index.css'\nimport { BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n     <App />\n </BrowserRouter>\n       , document.getElementById('root'))\n"],"sourceRoot":""}